import {
  BlogProvider,
  sortDate,
  useBlogContext
} from "./chunk-6NNV3MWG.js";
import {
  getStaticTags,
  getTags,
  split
} from "./chunk-MORU2T4I.js";
import {
  __objRest,
  __spreadProps,
  __spreadValues
} from "./chunk-G2ADBYYC.js";

// src/index.tsx
import { ThemeProvider } from "next-themes";

// src/basic-layout.tsx
import Head from "next/head";
import { useRef } from "react";

// src/mdx-theme.tsx
import Link from "next/link";
import { Code, Pre, Table, Td, Th, Tr } from "nextra/components";
import { MDXProvider } from "nextra/mdx";
import {
  createContext,
  createRef,
  useContext,
  useEffect,
  useState
} from "react";
import { createPortal } from "react-dom";
import { Fragment, jsx, jsxs } from "react/jsx-runtime";
var HeadingContext = createContext(createRef());
var H1 = ({ children }) => {
  const ref = useContext(HeadingContext);
  const { opts } = useBlogContext();
  const [showHeading, setShowHeading] = useState(false);
  useEffect(() => {
    if (ref.current && opts.hasJsxInH1) {
      setShowHeading(true);
    }
  }, [opts.hasJsxInH1, ref]);
  return /* @__PURE__ */ jsx(Fragment, { children: showHeading && createPortal(children, ref.current) });
};
function HeadingLink(_a) {
  var _b = _a, {
    tag: Tag,
    children,
    id,
    className
  } = _b, props = __objRest(_b, [
    "tag",
    "children",
    "id",
    "className"
  ]);
  return /* @__PURE__ */ jsxs(
    Tag,
    __spreadProps(__spreadValues({
      className: (
        // can be added by footnotes
        className === "sr-only" ? "nx-sr-only" : `nx-not-prose subheading-${Tag}`
      )
    }, props), {
      children: [
        children,
        id && /* @__PURE__ */ jsx(
          "a",
          {
            href: `#${id}`,
            id,
            className: "subheading-anchor",
            "aria-label": "Permalink for this section"
          }
        )
      ]
    })
  );
}
var EXTERNAL_HREF_REGEX = /https?:\/\//;
var A = (_a) => {
  var _b = _a, { children, href = "" } = _b, props = __objRest(_b, ["children", "href"]);
  if (EXTERNAL_HREF_REGEX.test(href)) {
    return /* @__PURE__ */ jsxs("a", __spreadProps(__spreadValues({ href, target: "_blank", rel: "noreferrer" }, props), { children: [
      children,
      /* @__PURE__ */ jsx("span", { className: "nx-sr-only nx-select-none", children: " (opens in a new tab)" })
    ] }));
  }
  return /* @__PURE__ */ jsx(Link, { href, passHref: true, legacyBehavior: true, children: /* @__PURE__ */ jsx("a", __spreadProps(__spreadValues({}, props), { children })) });
};
var useComponents = () => {
  const { config } = useBlogContext();
  return __spreadValues({
    h1: H1,
    h2: (props) => /* @__PURE__ */ jsx(HeadingLink, __spreadValues({ tag: "h2" }, props)),
    h3: (props) => /* @__PURE__ */ jsx(HeadingLink, __spreadValues({ tag: "h3" }, props)),
    h4: (props) => /* @__PURE__ */ jsx(HeadingLink, __spreadValues({ tag: "h4" }, props)),
    h5: (props) => /* @__PURE__ */ jsx(HeadingLink, __spreadValues({ tag: "h5" }, props)),
    h6: (props) => /* @__PURE__ */ jsx(HeadingLink, __spreadValues({ tag: "h6" }, props)),
    a: A,
    pre: (_a) => {
      var _b = _a, { children } = _b, props = __objRest(_b, ["children"]);
      return /* @__PURE__ */ jsx("div", { className: "nx-not-prose", children: /* @__PURE__ */ jsx(Pre, __spreadProps(__spreadValues({}, props), { children })) });
    },
    tr: Tr,
    th: Th,
    td: Td,
    table: (props) => /* @__PURE__ */ jsx(Table, __spreadValues({ className: "nx-not-prose" }, props)),
    code: Code
  }, config.components);
};
var MDXTheme = ({
  children
}) => {
  return /* @__PURE__ */ jsx(MDXProvider, { components: useComponents(), children });
};

// src/basic-layout.tsx
import { jsx as jsx2, jsxs as jsxs2 } from "react/jsx-runtime";
var BasicLayout = ({ children }) => {
  var _a;
  const { config, opts } = useBlogContext();
  const title = `${opts.title}${config.titleSuffix || ""}`;
  const ref = useRef(null);
  return /* @__PURE__ */ jsxs2(
    "article",
    {
      className: "nx-container nx-prose max-md:nx-prose-sm dark:nx-prose-dark",
      dir: "ltr",
      children: [
        /* @__PURE__ */ jsxs2(Head, { children: [
          /* @__PURE__ */ jsx2("title", { children: title }),
          (_a = config.head) == null ? void 0 : _a.call(config, { title, meta: opts.frontMatter })
        ] }),
        /* @__PURE__ */ jsxs2(HeadingContext.Provider, { value: ref, children: [
          opts.hasJsxInH1 ? /* @__PURE__ */ jsx2("h1", { ref }) : null,
          opts.hasJsxInH1 ? null : /* @__PURE__ */ jsx2("h1", { children: opts.title }),
          children,
          config.footer
        ] })
      ]
    }
  );
};

// src/meta.tsx
import Link2 from "next/link";

// src/theme-switch.tsx
import { useTheme } from "next-themes";
import { useMounted } from "nextra/hooks";
import { MoonIcon, SunIcon } from "nextra/icons";
import { jsx as jsx3 } from "react/jsx-runtime";
function ThemeSwitch() {
  const { setTheme, resolvedTheme } = useTheme();
  const mounted = useMounted();
  const isDark = resolvedTheme === "dark";
  const toggleTheme = () => {
    setTheme(isDark ? "light" : "dark");
  };
  return /* @__PURE__ */ jsx3(
    "span",
    {
      role: "button",
      "aria-label": "Toggle Dark Mode",
      className: "nx-cursor-pointer nx-p-2 nx-text-current",
      tabIndex: 0,
      onClick: toggleTheme,
      onKeyDown: (e) => {
        if (e.key === "Enter")
          toggleTheme();
      },
      children: mounted && isDark ? /* @__PURE__ */ jsx3(MoonIcon, {}) : /* @__PURE__ */ jsx3(SunIcon, {})
    }
  );
}

// src/utils/traverse.ts
function traverse(pageMap, matcher) {
  for (const pageMapItem of pageMap) {
    if (matcher(pageMapItem)) {
      return pageMapItem;
    }
  }
  for (const item of pageMap) {
    if (item.kind === "Folder") {
      const matched = traverse(item.children, matcher);
      if (matched) {
        return matched;
      }
    }
  }
  return null;
}

// src/utils/parent.ts
var getParent = ({ opts }) => {
  let back = null;
  const parentPages = [];
  const { route } = opts;
  traverse(opts.pageMap, (page) => {
    if ("route" in page && route !== page.route && (route + "/").startsWith(page.route === "/" ? "/" : page.route + "/")) {
      parentPages.push(page);
    }
  });
  const parentPage = parentPages.reverse().find(
    (page) => "frontMatter" in page && page.frontMatter && page.frontMatter.type === "posts"
  );
  if (parentPage) {
    back = parentPage.route;
  }
  return { parentPage, back };
};

// src/meta.tsx
import { jsx as jsx4, jsxs as jsxs3 } from "react/jsx-runtime";
function Meta() {
  var _a, _b;
  const { opts, config } = useBlogContext();
  const { author, date, tag } = opts.frontMatter;
  const { back } = getParent({ opts, config });
  const tags = tag ? split(tag) : [];
  const tagsEl = tags.map((t) => /* @__PURE__ */ jsx4(Link2, { href: "/tags/[tag]", as: `/tags/${t}`, passHref: true, legacyBehavior: true, children: /* @__PURE__ */ jsx4(
    "a",
    {
      className: "\n          nx-select-none\n          nx-rounded-md\n          nx-bg-gray-200\n          nx-px-1\n          nx-text-sm\n          nx-text-gray-400\n          nx-transition-colors\n          hover:nx-bg-gray-300\n          hover:nx-text-gray-500\n          dark:nx-bg-gray-600\n          dark:nx-text-gray-300\n          dark:hover:nx-bg-gray-700\n          dark:hover:nx-text-gray-200\n        ",
      children: t
    }
  ) }, t));
  const readingTime = (_a = opts.readingTime) == null ? void 0 : _a.text;
  const dateObj = date ? new Date(date) : null;
  return /* @__PURE__ */ jsxs3(
    "div",
    {
      className: "nx-mb-8 nx-flex nx-gap-3 " + (readingTime ? "nx-items-start" : "nx-items-center"),
      children: [
        /* @__PURE__ */ jsxs3("div", { className: "nx-grow dark:nx-text-gray-400 nx-text-gray-600", children: [
          /* @__PURE__ */ jsxs3("div", { className: "nx-not-prose nx-flex nx-flex-wrap nx-items-center nx-gap-1", children: [
            author,
            author && date && ",",
            dateObj && /* @__PURE__ */ jsx4("time", { dateTime: dateObj.toISOString(), children: ((_b = config.dateFormatter) == null ? void 0 : _b.call(config, dateObj)) || dateObj.toDateString() }),
            (author || date) && (readingTime || tags.length > 0) && /* @__PURE__ */ jsx4("span", { className: "nx-px-1", children: "\u2022" }),
            readingTime || tagsEl
          ] }),
          readingTime && /* @__PURE__ */ jsx4("div", { className: "nx-not-prose nx-mt-1 nx-flex nx-flex-wrap nx-items-center nx-gap-1", children: tagsEl })
        ] }),
        /* @__PURE__ */ jsxs3("div", { className: "nx-flex nx-items-center nx-gap-3 print:nx-hidden", children: [
          back && /* @__PURE__ */ jsx4(Link2, { href: back, passHref: true, legacyBehavior: true, children: /* @__PURE__ */ jsx4("a", { children: "Back" }) }),
          config.darkMode && /* @__PURE__ */ jsx4(ThemeSwitch, {})
        ] })
      ]
    }
  );
}

// src/article-layout.tsx
import { jsx as jsx5, jsxs as jsxs4 } from "react/jsx-runtime";
var ArticleLayout = ({ children }) => {
  const { config } = useBlogContext();
  return /* @__PURE__ */ jsxs4(BasicLayout, { children: [
    /* @__PURE__ */ jsx5(Meta, {}),
    /* @__PURE__ */ jsxs4(MDXTheme, { children: [
      children,
      config.postFooter,
      config.comments
    ] })
  ] });
};

// src/constants.tsx
import { jsxs as jsxs5 } from "react/jsx-runtime";
var DEFAULT_THEME = {
  footer: /* @__PURE__ */ jsxs5("small", { className: "nx-mt-32 nx-block", children: [
    "CC BY-NC 4.0 ",
    (/* @__PURE__ */ new Date()).getFullYear(),
    " \xA9 Shu Ding."
  ] }),
  readMore: "Read More \u2192"
};

// src/nav.tsx
import Link3 from "next/link";

// src/utils/collect.ts
var isNav = (page) => {
  var _a;
  const type = "frontMatter" in page && ((_a = page.frontMatter) == null ? void 0 : _a.type);
  return type && ["page", "posts"].includes(type);
};
var isPost = (page) => {
  if (page.kind === "Folder" || page.kind === "Meta" || page.name.startsWith("_"))
    return false;
  const { draft, type } = page.frontMatter || {};
  return !draft && (!type || type === "post");
};
var collectPostsAndNavs = ({ opts }) => {
  const posts = [];
  const navPages = [];
  const { route } = opts;
  traverse(opts.pageMap, (page) => {
    if (isNav(page)) {
      navPages.push(__spreadProps(__spreadValues({}, page), { active: page.route === route }));
    }
    if (isPost(page)) {
      posts.push(page);
    }
  });
  posts.sort(sortDate);
  navPages.sort(sortDate);
  return { posts, navPages };
};

// src/nav.tsx
import { jsx as jsx6, jsxs as jsxs6 } from "react/jsx-runtime";
function Nav() {
  var _a;
  const { opts, config } = useBlogContext();
  const { navPages } = collectPostsAndNavs({ opts, config });
  return /* @__PURE__ */ jsxs6("div", { className: "nx-mb-8 nx-flex nx-items-center nx-gap-3", children: [
    /* @__PURE__ */ jsxs6("div", { className: "nx-flex nx-grow nx-flex-wrap nx-items-center nx-justify-end nx-gap-3", children: [
      navPages.map((page) => {
        var _a2;
        const name = ((_a2 = page.frontMatter) == null ? void 0 : _a2.title) || page.name;
        if (page.active) {
          return /* @__PURE__ */ jsx6(
            "span",
            {
              className: "nx-cursor-default dark:nx-text-gray-400 nx-text-gray-600",
              children: name
            },
            page.route
          );
        }
        return /* @__PURE__ */ jsx6(Link3, { href: page.route, passHref: true, legacyBehavior: true, children: /* @__PURE__ */ jsx6("a", { children: name }) }, page.route);
      }),
      (_a = config.navs) == null ? void 0 : _a.map((nav) => /* @__PURE__ */ jsx6(Link3, { href: nav.url, passHref: true, legacyBehavior: true, children: /* @__PURE__ */ jsx6("a", { children: nav.name }) }, nav.url))
    ] }),
    config.darkMode && /* @__PURE__ */ jsx6(ThemeSwitch, {})
  ] });
}

// src/page-layout.tsx
import { jsx as jsx7, jsxs as jsxs7 } from "react/jsx-runtime";
var PageLayout = ({ children }) => {
  return /* @__PURE__ */ jsxs7(BasicLayout, { children: [
    /* @__PURE__ */ jsx7(Nav, {}),
    /* @__PURE__ */ jsx7(MDXTheme, { children })
  ] });
};

// src/posts-layout.tsx
import Link4 from "next/link";
import { useRouter } from "next/router";
import { jsx as jsx8, jsxs as jsxs8 } from "react/jsx-runtime";
function PostsLayout({
  children
}) {
  const { config, opts } = useBlogContext();
  const { posts } = collectPostsAndNavs({ config, opts });
  const router = useRouter();
  const { type } = opts.frontMatter;
  const tagName = type === "tag" ? router.query.tag : null;
  const postList = posts.map((post) => {
    var _a, _b, _c;
    if (tagName) {
      const tags = getTags(post);
      if (!Array.isArray(tagName) && !tags.includes(tagName)) {
        return null;
      }
    } else if (type === "tag") {
      return null;
    }
    const postTitle = ((_a = post.frontMatter) == null ? void 0 : _a.title) || post.name;
    const date = ((_b = post.frontMatter) == null ? void 0 : _b.date) ? new Date(post.frontMatter.date) : null;
    const description = (_c = post.frontMatter) == null ? void 0 : _c.description;
    return /* @__PURE__ */ jsxs8("div", { className: "post-item", children: [
      /* @__PURE__ */ jsx8("h3", { children: /* @__PURE__ */ jsx8(Link4, { href: post.route, passHref: true, legacyBehavior: true, children: /* @__PURE__ */ jsx8("a", { className: "!nx-no-underline", children: postTitle }) }) }),
      description && /* @__PURE__ */ jsxs8("p", { className: "nx-mb-2 dark:nx-text-gray-400 nx-text-gray-600", children: [
        description,
        config.readMore && /* @__PURE__ */ jsx8(Link4, { href: post.route, passHref: true, legacyBehavior: true, children: /* @__PURE__ */ jsx8("a", { className: "post-item-more nx-ml-2", children: config.readMore }) })
      ] }),
      date && /* @__PURE__ */ jsx8(
        "time",
        {
          className: "nx-text-sm dark:nx-text-gray-400 nx-text-gray-600",
          dateTime: date.toISOString(),
          children: date.toDateString()
        }
      )
    ] }, post.route);
  });
  return /* @__PURE__ */ jsxs8(BasicLayout, { children: [
    /* @__PURE__ */ jsx8(Nav, {}),
    /* @__PURE__ */ jsx8(MDXTheme, { children }),
    postList
  ] });
}

// src/index.tsx
import { useTheme as useTheme2 } from "next-themes";
import { jsx as jsx9 } from "react/jsx-runtime";
var layoutMap = {
  post: ArticleLayout,
  page: PageLayout,
  posts: PostsLayout,
  tag: PostsLayout
};
var BlogLayout = ({
  config,
  children,
  opts
}) => {
  const type = opts.frontMatter.type || "post";
  const Layout2 = layoutMap[type];
  if (!Layout2) {
    throw new Error(
      `nextra-theme-blog does not support the layout type "${type}" It only supports "post", "page", "posts" and "tag"`
    );
  }
  return /* @__PURE__ */ jsx9(BlogProvider, { opts, config, children: /* @__PURE__ */ jsx9(Layout2, { children }) });
};
function Layout(_a) {
  var _b = _a, {
    children
  } = _b, context = __objRest(_b, [
    "children"
  ]);
  const extendedConfig = __spreadValues(__spreadValues({}, DEFAULT_THEME), context.themeConfig);
  return /* @__PURE__ */ jsx9(ThemeProvider, { attribute: "class", defaultTheme: "system", enableSystem: true, children: /* @__PURE__ */ jsx9(BlogLayout, { config: extendedConfig, opts: context.pageOpts, children }) });
}
export {
  Layout as default,
  getStaticTags,
  useBlogContext,
  useTheme2 as useTheme
};
