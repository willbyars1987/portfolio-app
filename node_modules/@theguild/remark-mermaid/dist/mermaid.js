import { jsx } from "react/jsx-runtime";
import { useEffect, useId, useState } from "react";
import mermaid from "mermaid";
function Mermaid({ chart }) {
  const id = useId();
  const [svg, setSvg] = useState("");
  useEffect(() => {
    const htmlElement = document.documentElement;
    const mutationObserver = new MutationObserver(renderChart);
    mutationObserver.observe(htmlElement, { attributes: true });
    renderChart();
    return () => {
      mutationObserver.disconnect();
    };
    async function renderChart() {
      const isDarkTheme = htmlElement.classList.contains("dark") || htmlElement.attributes.getNamedItem("data-theme")?.value === "dark";
      const mermaidConfig = {
        startOnLoad: false,
        securityLevel: "loose",
        fontFamily: "inherit",
        themeCSS: "margin: 1.5rem auto 0;",
        theme: isDarkTheme ? "dark" : "default"
      };
      try {
        mermaid.initialize(mermaidConfig);
        const { svg: svg2 } = await mermaid.render(
          // strip invalid characters for `id` attribute
          id.replaceAll(":", ""),
          chart
        );
        setSvg(svg2);
      } catch (error) {
        console.error("Error while rendering mermaid", error);
      }
    }
  }, []);
  return /* @__PURE__ */ jsx("div", { dangerouslySetInnerHTML: { __html: svg } });
}
export {
  Mermaid
};
